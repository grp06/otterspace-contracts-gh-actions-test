on:
  pull_request:
    types:
      - closed

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          # Get the latest tag
          last_tag=$(git describe --tags --abbrev=0)
          echo "Latest tag commit: $last_tag"
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Current commit: $(git rev-parse HEAD)"

          # Create new branch from that tag
          git branch last_tag_branch $last_tag

          #switch to it
          git switch last_tag_branch
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Current commit: $(git rev-parse HEAD)"          

          # Get the contents of src/Badges.sol from the latest tag
          last_tag_badges=$(cat src/Badges.sol)
          echo "Last tag's code:"
          echo "$last_tag_badges"
          echo "end of last tag's badges file"

          echo "about to check out HEAD"
          # Checkout the current commit
          git checkout HEAD
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Current commit: $(git rev-parse HEAD)"

          # Get the contents of src/Badges.sol from the current commit
          current_badges=$(cat src/Badges.sol)
          echo "Current commit's code:"
          echo "$current_badges"

          # Compare the contents of src/Badges.sol between the latest tag and the current commit
          if [ "$last_tag_badges" != "$current_badges" ]; then
              echo "ITS DIFFERENT!"
          fi
      - run: |
          # Tag the current commit with the version specified in package.json
          version=$(grep '"version":' package.json | cut -d'"' -f4)
          git tag $version
          git push origin $version
